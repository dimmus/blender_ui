src_gpu_shaders_material = [
    'gpu_shader_material_add_shader',
    'gpu_shader_material_ambient_occlusion',
    'gpu_shader_material_attribute',
    'gpu_shader_material_background',
    'gpu_shader_material_bevel',
    'gpu_shader_material_wavelength',
    'gpu_shader_material_blackbody',
    'gpu_shader_material_bright_contrast',
    'gpu_shader_material_bump',
    'gpu_shader_material_camera',
    'gpu_shader_material_clamp',
    'gpu_shader_material_combine_color',
    'gpu_shader_material_combine_hsv',
    'gpu_shader_material_combine_rgb',
    'gpu_shader_material_combine_xyz',
    'gpu_shader_material_diffuse',
    'gpu_shader_material_displacement',
    'gpu_shader_material_eevee_specular',
    'gpu_shader_material_emission',
    'gpu_shader_material_fractal_noise',
    'gpu_shader_material_fractal_voronoi',
    'gpu_shader_material_fresnel',
    'gpu_shader_material_gamma',
    'gpu_shader_material_geometry',
    'gpu_shader_material_glass',
    'gpu_shader_material_glossy',
    'gpu_shader_material_hair_info',
    'gpu_shader_material_hair',
    'gpu_shader_material_holdout',
    'gpu_shader_material_hue_sat_val',
    'gpu_shader_material_invert',
    'gpu_shader_material_layer_weight',
    'gpu_shader_material_light_falloff',
    'gpu_shader_material_light_path',
    'gpu_shader_material_mapping',
    'gpu_shader_material_map_range',
    'gpu_shader_material_mix_color',
    'gpu_shader_material_mix_shader',
    'gpu_shader_material_noise',
    'gpu_shader_material_normal',
    'gpu_shader_material_normal_map',
    'gpu_shader_material_object_info',
    'gpu_shader_material_output_aov',
    'gpu_shader_material_output_material',
    'gpu_shader_material_output_world',
    'gpu_shader_material_particle_info',
    'gpu_shader_material_point_info',
    'gpu_shader_material_principled',
    'gpu_shader_material_ray_portal',
    'gpu_shader_material_refraction',
    'gpu_shader_material_rgb_to_bw',
    'gpu_shader_material_separate_color',
    'gpu_shader_material_separate_hsv',
    'gpu_shader_material_separate_rgb',
    'gpu_shader_material_separate_xyz',
    'gpu_shader_material_set',
    'gpu_shader_material_shader_to_rgba',
    'gpu_shader_material_sheen',
    'gpu_shader_material_squeeze',
    'gpu_shader_material_subsurface_scattering',
    'gpu_shader_material_tangent',
    'gpu_shader_material_tex_brick',
    'gpu_shader_material_tex_checker',
    'gpu_shader_material_tex_environment',
    'gpu_shader_material_tex_gradient',
    'gpu_shader_material_tex_image',
    'gpu_shader_material_tex_magic',
    'gpu_shader_material_tex_noise',
    'gpu_shader_material_tex_sky',
    'gpu_shader_material_texture_coordinates',
    'gpu_shader_material_tex_voronoi',
    'gpu_shader_material_tex_wave',
    'gpu_shader_material_tex_white_noise',
    'gpu_shader_material_toon',
    'gpu_shader_material_transform_utils',
    'gpu_shader_material_translucent',
    'gpu_shader_material_transparent',
    'gpu_shader_material_uv_map',
    'gpu_shader_material_vector_displacement',
    'gpu_shader_material_vector_math',
    'gpu_shader_material_vector_rotate',
    'gpu_shader_material_vertex_color',
    'gpu_shader_material_volume_absorption',
    'gpu_shader_material_volume_principled',
    'gpu_shader_material_volume_scatter',
    'gpu_shader_material_voronoi',
    'gpu_shader_material_wireframe',
    'gpu_shader_material_world_normals',
]

foreach shader_c : src_gpu_shaders_material
    src_gpu_shaders_c += custom_target(
        input: shader_c + '.glsl',
        output: shader_c + '.c',
        command: [
            bin_datatoc,
            '@INPUT@', '@OUTPUT@', '--options=strip_leading_c_comments'
        ],
    )
endforeach